// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	abcitypes "github.com/cometbft/cometbft/abci/types"

	mock "github.com/stretchr/testify/mock"

	types "github.com/cometbft/cometbft/types"
)

// PostCheckFunc is an autogenerated mock type for the PostCheckFunc type
type PostCheckFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0, _a1
func (_m *PostCheckFunc) Execute(_a0 types.Tx, _a1 *abcitypes.ResponseCheckTx) error {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(types.Tx, *abcitypes.ResponseCheckTx) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewPostCheckFunc creates a new instance of PostCheckFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPostCheckFunc(t interface {
	mock.TestingT
	Cleanup(func())
}) *PostCheckFunc {
	mock := &PostCheckFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
