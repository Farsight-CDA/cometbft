// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	net "net"

	mock "github.com/stretchr/testify/mock"

	p2p "github.com/cometbft/cometbft/p2p"
)

// ConnFilterFunc is an autogenerated mock type for the ConnFilterFunc type
type ConnFilterFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0, _a1, _a2
func (_m *ConnFilterFunc) Execute(_a0 p2p.ConnSet, _a1 net.Conn, _a2 []net.IP) error {
	ret := _m.Called(_a0, _a1, _a2)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(p2p.ConnSet, net.Conn, []net.IP) error); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewConnFilterFunc creates a new instance of ConnFilterFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewConnFilterFunc(t interface {
	mock.TestingT
	Cleanup(func())
}) *ConnFilterFunc {
	mock := &ConnFilterFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
